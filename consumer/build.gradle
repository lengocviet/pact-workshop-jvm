plugins {
  id 'au.com.dius.pact' version '4.1.9'
}

apply plugin: 'application'
apply plugin: 'au.com.dius.pact'

mainClassName = 'au.com.dius.pactworkshop.consumer.Consumer'
version = '2'

dependencies {
  compile 'com.mashape.unirest:unirest-java:1.4.9'
  compile 'ch.qos.logback:logback-core:1.2.3'
  compile 'ch.qos.logback:logback-classic:1.2.3'
  compile 'org.apache.commons:commons-lang3:3.7'
  testCompile 'com.github.tomakehurst:wiremock:2.16.0'
  testCompile 'au.com.dius.pact:consumer:4.1.9'
  testCompile 'au.com.dius.pact:provider:4.1.9'
  implementation 'au.com.dius.pact.consumer:junit:4.1.9'
}

sourceSets {
  contract  {
    java {
      srcDir 'src/test/java/au/com/dius/pactworkshop/consumer'
      compileClasspath += sourceSets.main.output
      runtimeClasspath += sourceSets.main.output
    }
  }
}
configurations {
  contractCompile.extendsFrom testCompile
}

dependencies {
  contractCompile 'com.github.tomakehurst:wiremock:2.16.0'
  contractCompile 'com.github.tomakehurst:wiremock:2.16.0'
  contractCompile 'au.com.dius.pact:consumer:4.1.9'
  contractCompile 'au.com.dius.pact:provider:4.1.9'
  contractCompile 'au.com.dius.pact.consumer:junit:4.1.9'
}
task contract(type: Test) {
  description = "Run contract tests"
  group = "verification"
  testClassesDirs = sourceSets.contract.output.classesDirs
  classpath = sourceSets.contract.runtimeClasspath
  mustRunAfter test

}

test {
  if (System.properties['test.profile']== 'integration') {
    exclude '**/au*/*' }
   else if (System.properties['test.profile'] == "contract") {
    exclude '**/*integration*'
  }
}
contract {
  testLogging {
    events "passed","skipped", "failed"
  }
}
check.dependsOn contract
pact {
  publish {
    pactBrokerUrl = 'http://192.168.189.152:8500'
    /*pactDirectory = '/target/pact'*/
   /* pactBrokerUsername = project.pactBrokerUser
    pactBrokerPassword = project.pactBrokerPassword*/
    tags = ['test']
  }
}
